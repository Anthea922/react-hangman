{"ast":null,"code":"/*Explanation:\n\nProgramming Languages Array: The programming_languages array contains strings representing various programming languages used in the Hangman game.\n\nrandomWord Function: This function selects a random programming language from the array. Here's how it works:\n\nMath.random() * programming_languages.length: Generates a random floating-point number between 0 (inclusive) and the length of the array (exclusive).\nMath.floor(): Rounds down the floating-point number to the nearest integer, creating a valid index.\nprogramming_languages[randomIndex]: Retrieves the programming language at the randomly generated index.\nExport: The randomWord function is exported using export { randomWord }, making it available for use in other files.\n\nThis module provides a convenient way to obtain a random programming language for the Hangman game, contributing to the dynamic and diverse nature of the game's word selection.*/\n\n// Array containing programming languages for the Hangman game\n\nvar programming_languages = [\"python\", \"javascript\", \"mongodb\", \"json\", \"java\", \"html\", \"css\", \"c\", \"csharp\", \"golang\", \"kotlin\", \"php\", \"sql\", \"ruby\", \"fortran\"];\n\n// Function to randomly select and return a programming language from the array\nfunction randomWord() {\n  // Generate a random index within the length of the programming_languages array\n  const randomIndex = Math.floor(Math.random() * programming_languages.length);\n\n  // Retrieve and return the programming language at the randomly generated index\n  return programming_languages[randomIndex];\n}\n\n// Export the randomWord function for use in other files\nexport { randomWord };","map":{"version":3,"names":["programming_languages","randomWord","randomIndex","Math","floor","random","length"],"sources":["/Users/antheadutoit/Hangman projects/react-hangman/src/components/Words.js"],"sourcesContent":["/*Explanation:\n\nProgramming Languages Array: The programming_languages array contains strings representing various programming languages used in the Hangman game.\n\nrandomWord Function: This function selects a random programming language from the array. Here's how it works:\n\nMath.random() * programming_languages.length: Generates a random floating-point number between 0 (inclusive) and the length of the array (exclusive).\nMath.floor(): Rounds down the floating-point number to the nearest integer, creating a valid index.\nprogramming_languages[randomIndex]: Retrieves the programming language at the randomly generated index.\nExport: The randomWord function is exported using export { randomWord }, making it available for use in other files.\n\nThis module provides a convenient way to obtain a random programming language for the Hangman game, contributing to the dynamic and diverse nature of the game's word selection.*/\n\n// Array containing programming languages for the Hangman game\n\nvar programming_languages = [\n\t\"python\",\n\t\"javascript\",\n\t\"mongodb\",\n\t\"json\",\n\t\"java\",\n\t\"html\",\n\t\"css\",\n\t\"c\",\n\t\"csharp\",\n\t\"golang\",\n\t\"kotlin\",\n\t\"php\",\n\t\"sql\",\n\t\"ruby\",\n\t\"fortran\",\n]\n\n// Function to randomly select and return a programming language from the array\nfunction randomWord() {\n\t// Generate a random index within the length of the programming_languages array\n\tconst randomIndex = Math.floor(Math.random() * programming_languages.length);\n\n\t// Retrieve and return the programming language at the randomly generated index\n\treturn programming_languages[randomIndex];\n}\n\n// Export the randomWord function for use in other files\nexport { randomWord };"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAIA,qBAAqB,GAAG,CAC3B,QAAQ,EACR,YAAY,EACZ,SAAS,EACT,MAAM,EACN,MAAM,EACN,MAAM,EACN,KAAK,EACL,GAAG,EACH,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,KAAK,EACL,KAAK,EACL,MAAM,EACN,SAAS,CACT;;AAED;AACA,SAASC,UAAUA,CAAA,EAAG;EACrB;EACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,qBAAqB,CAACM,MAAM,CAAC;;EAE5E;EACA,OAAON,qBAAqB,CAACE,WAAW,CAAC;AAC1C;;AAEA;AACA,SAASD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}