{"ast":null,"code":"var _jsxFileName = \"/Users/antheadutoit/Hangman projects/react-hangman/src/components/Keyboard.js\";\n// Keyboard.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Keyboard = ({\n  handleGuess,\n  guessed\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keyboard\",\n    children: Array.from({\n      length: 26\n    }, (_, i) => String.fromCharCode(97 + i)).map(letter => /^[a-z]$/.test(letter) && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `btn btn-keyboard ${guessed.has(letter) ? 'clicked' : ''}`,\n      value: letter,\n      onClick: () => handleGuess(letter),\n      disabled: guessed.has(letter),\n      children: letter\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = Keyboard;\nexport default Keyboard;\nvar _c;\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Keyboard","handleGuess","guessed","className","children","Array","from","length","_","i","String","fromCharCode","map","letter","test","has","value","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/antheadutoit/Hangman projects/react-hangman/src/components/Keyboard.js"],"sourcesContent":["// Keyboard.js\nimport React from 'react';\n\nconst Keyboard = ({ handleGuess, guessed }) => {\n    return (\n        <div className=\"keyboard\">\n            {Array.from({ length: 26 }, (_, i) => String.fromCharCode(97 + i)).map((letter) => (\n                /^[a-z]$/.test(letter) && (\n                    <button\n                        className={`btn btn-keyboard ${guessed.has(letter) ? 'clicked' : ''}`}\n                        key={letter}\n                        value={letter}\n                        onClick={() => handleGuess(letter)}\n                        disabled={guessed.has(letter)}\n                    >\n                        {letter}\n                    </button>\n                )\n            ))}\n        </div>\n    );\n};\n\nexport default Keyboard;\n\n\n\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAQ,CAAC,KAAK;EAC3C,oBACIH,OAAA;IAAKI,SAAS,EAAC,UAAU;IAAAC,QAAA,EACpBC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKC,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGF,CAAC,CAAC,CAAC,CAACG,GAAG,CAAEC,MAAM,IAC1E,SAAS,CAACC,IAAI,CAACD,MAAM,CAAC,iBAClBd,OAAA;MACII,SAAS,EAAG,oBAAmBD,OAAO,CAACa,GAAG,CAACF,MAAM,CAAC,GAAG,SAAS,GAAG,EAAG,EAAE;MAEtEG,KAAK,EAAEH,MAAO;MACdI,OAAO,EAAEA,CAAA,KAAMhB,WAAW,CAACY,MAAM,CAAE;MACnCK,QAAQ,EAAEhB,OAAO,CAACa,GAAG,CAACF,MAAM,CAAE;MAAAT,QAAA,EAE7BS;IAAM,GALFA,MAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMP,CAEf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACC,EAAA,GAlBIvB,QAAQ;AAoBd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}