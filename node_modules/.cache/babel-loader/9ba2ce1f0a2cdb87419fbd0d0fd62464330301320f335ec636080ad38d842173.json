{"ast":null,"code":"var _jsxFileName = \"/Users/antheadutoit/Hangman projects/react-hangman/src/components/HelpModal.js\";\n/*Explanation:\n\nFunctional Component Declaration: The HelpModal component is a functional component that takes two props, isOpen (boolean) and onClose (function).\n\nMain Container with Conditional Class: The main container div has a dynamic class open based on the isOpen prop. This class controls the visibility of the modal.\n\nModal Content: Inside the main container, there's another div for the modal content. This is where the rules and title are displayed.\n\nClose Button: The 'x' symbol acts as a close button. It triggers the onClose function when clicked.\n\nRules: There are four rules listed in the modal, each represented by a paragraph (<p>) element.</p>*/\n// HelpModal.js\nimport React from 'react';\n\n// Functional component for displaying help modal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HelpModal = ({\n  isOpen,\n  onClose\n}) => {\n  // The main div with conditional class 'open' based on modal state\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal ${isOpen ? 'open' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Hangman Game Rules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"1. Guess the programming language letter by letter.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2. You can make up to 10 incorrect guesses.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"3. If you guess all the letters correctly, you win!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"4. If you make 10 incorrect guesses, you lose.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n// Export the HelpModal component for use in other files\n_c = HelpModal;\nexport default HelpModal;\nvar _c;\n$RefreshReg$(_c, \"HelpModal\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","HelpModal","isOpen","onClose","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/antheadutoit/Hangman projects/react-hangman/src/components/HelpModal.js"],"sourcesContent":["/*Explanation:\n\nFunctional Component Declaration: The HelpModal component is a functional component that takes two props, isOpen (boolean) and onClose (function).\n\nMain Container with Conditional Class: The main container div has a dynamic class open based on the isOpen prop. This class controls the visibility of the modal.\n\nModal Content: Inside the main container, there's another div for the modal content. This is where the rules and title are displayed.\n\nClose Button: The 'x' symbol acts as a close button. It triggers the onClose function when clicked.\n\nRules: There are four rules listed in the modal, each represented by a paragraph (<p>) element.</p>*/\n// HelpModal.js\nimport React from 'react';\n\n// Functional component for displaying help modal\nconst HelpModal = ({ isOpen, onClose }) => {\n    // The main div with conditional class 'open' based on modal state\n    return (\n        <div className={`modal ${isOpen ? 'open' : ''}`}>\n            {/* Modal content div */}\n            <div className=\"modal-content\">\n                {/* Close button represented by 'x', triggers onClose function */}\n                <span className=\"close\" onClick={onClose}>&times;</span>\n                {/* Modal title */}\n                <h2>Hangman Game Rules</h2>\n                {/* Rule 1 */}\n                <p>1. Guess the programming language letter by letter.</p>\n                {/* Rule 2 */}\n                <p>2. You can make up to 10 incorrect guesses.</p>\n                {/* Rule 3 */}\n                <p>3. If you guess all the letters correctly, you win!</p>\n                {/* Rule 4 */}\n                <p>4. If you make 10 incorrect guesses, you lose.</p>\n            </div>\n        </div>\n    );\n};\n\n// Export the HelpModal component for use in other files\nexport default HelpModal;\n\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EACvC;EACA,oBACIH,OAAA;IAAKI,SAAS,EAAG,SAAQF,MAAM,GAAG,MAAM,GAAG,EAAG,EAAE;IAAAG,QAAA,eAE5CL,OAAA;MAAKI,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAE1BL,OAAA;QAAMI,SAAS,EAAC,OAAO;QAACE,OAAO,EAAEH,OAAQ;QAAAE,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAExDV,OAAA;QAAAK,QAAA,EAAI;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE3BV,OAAA;QAAAK,QAAA,EAAG;MAAmD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAE1DV,OAAA;QAAAK,QAAA,EAAG;MAA2C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAElDV,OAAA;QAAAK,QAAA,EAAG;MAAmD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAE1DV,OAAA;QAAAK,QAAA,EAAG;MAA8C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;;AAED;AAAAC,EAAA,GAvBMV,SAAS;AAwBf,eAAeA,SAAS;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}