{"ast":null,"code":"var _jsxFileName = \"/Users/antheadutoit/Hangman projects/react-hangman/src/components/Hangman.js\";\nimport React, { Component } from 'react';\nimport './Hangman.css';\nimport { randomWord } from './Words.js';\nimport step0 from \"../images/state1.gif\";\nimport step1 from \"../images/state2.gif\";\nimport step2 from \"../images/state3.gif\";\nimport step3 from \"../images/state4.gif\";\nimport step4 from \"../images/state5.gif\";\nimport step5 from \"../images/state6.gif\";\nimport step6 from \"../images/state7.gif\";\nimport step7 from \"../images/state8.gif\";\nimport step8 from \"../images/state9.gif\";\nimport step9 from \"../images/state10.gif\";\nimport step10 from \"../images/state11.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Hangman extends Component {\n  constructor(props) {\n    super(props);\n    this.handleGuess = e => {\n      let letter = e.target.value;\n      this.setState(st => ({\n        guessed: st.guessed.add(letter),\n        mistake: st.mistake + (st.answer.includes(letter) ? 0 : 1)\n      }));\n    };\n    this.resetButton = () => {\n      this.setState({\n        mistake: 0,\n        guessed: new Set([]),\n        answer: randomWord()\n      });\n    };\n    this.toggleHelpModal = () => {\n      this.setState(prevState => ({\n        isHelpModalOpen: !prevState.isHelpModalOpen\n      }));\n    };\n    this.state = {\n      mistake: 0,\n      guessed: new Set([]),\n      answer: randomWord()\n    };\n  }\n  guessedWord() {\n    return this.state.answer.split(\"\").map(letter => this.state.guessed.has(letter) ? letter : \" _ \");\n  }\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-lg btn-primary m-2\",\n      value: letter,\n      onClick: this.handleGuess,\n      disabled: this.state.guessed.has(letter),\n      children: letter\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this));\n  }\n  render() {\n    const {\n      isHelpModalOpen\n    } = this.state;\n    const gameOver = this.state.mistake >= this.props.maxWrong;\n    const isWinner = this.guessedWord().join(\"\") === this.state.answer;\n    let gameStat = this.generateButtons();\n    if (isWinner) {\n      gameStat = \"You Won!!!\";\n    }\n    if (gameOver) {\n      gameStat = \"You Lost!!!\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Hangman container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Hangman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"float-right\",\n        children: [\"Wrong Guesses: \", this.state.mistake, \" of \", this.props.maxWrong]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.props.images[this.state.mistake],\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Guess the Programming Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: !gameOver ? this.guessedWord() : this.state.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: gameStat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info\",\n          onClick: this.resetButton,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info m-2\",\n          onClick: this.toggleHelpModal,\n          children: \"Help\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), isHelpModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: this.toggleHelpModal,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Hangman Game Rules\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"1. Guess the programming language letter by letter.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"2. You can make up to 10 incorrect guesses.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"3. If you guess all the letters correctly, you win!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"4. If you make 10 incorrect guesses, you lose.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n}\nHangman.defaultProps = {\n  maxWrong: 10,\n  images: [step0, step1, step2, step3, step4, step5, step6, step7, step8, step9, step10]\n};\nexport default Hangman;","map":{"version":3,"names":["React","Component","randomWord","step0","step1","step2","step3","step4","step5","step6","step7","step8","step9","step10","jsxDEV","_jsxDEV","Hangman","constructor","props","handleGuess","e","letter","target","value","setState","st","guessed","add","mistake","answer","includes","resetButton","Set","toggleHelpModal","prevState","isHelpModalOpen","state","guessedWord","split","map","has","generateButtons","className","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","render","gameOver","maxWrong","isWinner","join","gameStat","src","images","alt","defaultProps"],"sources":["/Users/antheadutoit/Hangman projects/react-hangman/src/components/Hangman.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './Hangman.css';\nimport { randomWord } from './Words.js';\n\nimport step0 from \"../images/state1.gif\";\nimport step1 from \"../images/state2.gif\";\nimport step2 from \"../images/state3.gif\";\nimport step3 from \"../images/state4.gif\";\nimport step4 from \"../images/state5.gif\";\nimport step5 from \"../images/state6.gif\";\nimport step6 from \"../images/state7.gif\";\nimport step7 from \"../images/state8.gif\";\nimport step8 from \"../images/state9.gif\";\nimport step9 from \"../images/state10.gif\";\nimport step10 from \"../images/state11.gif\";\n\nclass Hangman extends Component {\n  static defaultProps = {\n    maxWrong: 10,\n    images: [step0, step1, step2, step3, step4, step5, step6, step7, step8, step9, step10]\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      mistake: 0,\n      guessed: new Set([]),\n      answer: randomWord()\n    }\n  }\n\n  handleGuess = e => {\n    let letter = e.target.value;\n    this.setState(st => ({\n      guessed: st.guessed.add(letter),\n      mistake: st.mistake + (st.answer.includes(letter) ? 0 : 1)\n    }));\n  }\n\n  guessedWord() {\n    return this.state.answer.split(\"\").map(letter => (this.state.guessed.has(letter) ? letter : \" _ \"));\n  }\n\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(letter => (\n      <button className='btn btn-lg btn-primary m-2'\n        key={letter}\n        value={letter}\n        onClick={this.handleGuess}\n        disabled={this.state.guessed.has(letter)}\n      >\n        {letter}\n      </button>\n    ));\n  }\n\n  resetButton = () => {\n    this.setState({\n      mistake: 0,\n      guessed: new Set([]),\n      answer: randomWord()\n    });\n  } \n\n  toggleHelpModal = () => {\n    this.setState((prevState) => ({\n      isHelpModalOpen: !prevState.isHelpModalOpen,\n    }));\n  }\n\n  render() {\n    const { isHelpModalOpen } = this.state;\n    const gameOver = this.state.mistake >= this.props.maxWrong;\n    const isWinner = this.guessedWord().join(\"\") === this.state.answer;\n    let gameStat = this.generateButtons();\n\n    if (isWinner) {\n      gameStat = \"You Won!!!\"\n    }\n\n    if (gameOver) {\n      gameStat = \"You Lost!!!\"\n    }\n\n    return (\n      <div className=\"Hangman container\">\n        <h1 className='text-center'>Hangman</h1>\n        <div className=\"float-right\">Wrong Guesses: {this.state.mistake} of {this.props.maxWrong}</div>\n        <div className=\"text-center\">\n          <img src={this.props.images[this.state.mistake]} alt=\"\"/>\n        </div>\n        <div className=\"text-center\">\n          <p>Guess the Programming Language:</p>\n          <p>\n            {!gameOver ? this.guessedWord() : this.state.answer}\n          </p>\n          <p>{gameStat}</p>\n          <button className='btn btn-info' onClick={this.resetButton}>Reset</button>\n\n          {/* Help Button*/ }\n          <button className='btn btn-info m-2' onClick={this.toggleHelpModal}>\n            Help\n          </button>\n\n          {/* Help Modal*/ }\n          {isHelpModalOpen && (\n            <div className=\"modal\">\n              <div className=\"modal-content\">\n                <span className=\"close\" onClick={this.toggleHelpModal}>&times;</span>\n                <h2>Hangman Game Rules</h2>\n                <p>1. Guess the programming language letter by letter.</p>\n                <p>2. You can make up to 10 incorrect guesses.</p>\n                <p>3. If you guess all the letters correctly, you win!</p>\n                <p>4. If you make 10 incorrect guesses, you lose.</p>\n                {/* Add more rules as needed */}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Hangman;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}